openapi: 3.0.3
info:
  title: Pet Store API
  description: API para la gestión de productos y servicios de una tienda de mascotas.
  version: 1.0.0
servers:
  - url: https://api.petstore.com/v1
tags:
  - name: products
    description: Operaciones sobre productos
  - name: categories
    description: Operaciones sobre categorías
  - name: users
    description: Operaciones de usuarios
  - name: cart
    description: Operaciones del carrito de compras
  - name: orders
    description: Operaciones de pedidos
  - name: reviews
    description: Operaciones de reseñas y valoraciones
  - name: search
    description: Funcionalidades de búsqueda


paths:
  /api/products:
    get:
      tags:
        - products
      summary: Listar productos
      description: Obtiene una lista de productos.
      operationId: listProducts
      parameters:
        - name: category
          in: query
          description: Filtrar productos por categoría
          schema:
            type: string

      responses:
        '200':
          description: Lista de productos obtenida exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        '400':
          description: Parámetros inválidos

    post:
      tags:
        - products
      summary: Crear un nuevo producto
      description: Permite a un administrador crear un nuevo producto.
      operationId: createProduct
      requestBody:
        description: Datos del nuevo producto
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '201':
          description: Producto creado exitosamente
        '400':
          description: Datos de entrada inválidos

  /api/products/{productId}:
    parameters:
      - name: productId
        in: path
        description: ID del producto
        required: true
        schema:
          type: string

    get:
      tags:
        - products
      summary: Obtener detalles de un producto
      description: Obtiene la información de un producto específico.
      operationId: getProductById
      responses:
        '200':
          description: Detalles del producto obtenidos exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Producto no encontrado

    put:
      tags:
        - products
      summary: Actualizar un producto
      description: Permite a un administrador actualizar los datos de un producto.
      operationId: updateProduct
      requestBody:
        description: Datos del producto a actualizar
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '200':
          description: Producto actualizado correctamente
        '400':
          description: Datos de entrada inválidos
        '404':
          description: Producto no encontrado

    delete:
      tags:
        - products
      summary: Eliminar un producto
      description: Permite a un administrador eliminar un producto.
      operationId: deleteProduct
      responses:
        '200':
          description: Producto eliminado correctamente
        '404':
          description: Producto no encontrado

  /api/categories:
    get:
      tags:
        - categories
      summary: Listar categorías
      description: Obtiene una lista de todas las categorías de productos.
      operationId: listCategories
      responses:
        '200':
          description: Lista de categorías obtenida exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
        '400':
          description: Error en los parámetros de consulta

    post:
      tags:
        - categories
      summary: Crear una nueva categoría
      description: Permite crear una nueva categoría.
      operationId: createCategory
      requestBody:
        description: Datos de la nueva categoría
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
      responses:
        '201':
          description: Categoría creada exitosamente
        '400':
          description: Datos de entrada inválidos

  /api/categories/{categoryId}:
    parameters:
      - name: categoryId
        in: path
        description: ID de la categoría
        required: true
        schema:
          type: string

    get:
      tags:
        - categories
      summary: Obtener detalles de una categoría
      description: Obtiene la información de una categoría específica.
      operationId: getCategoryById
      responses:
        '200':
          description: Detalles de la categoría obtenidos exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
        '404':
          description: Categoría no encontrada

    put:
      tags:
        - categories
      summary: Actualizar una categoría
      description: Permite a un administrador actualizar los datos de una categoría.
      operationId: updateCategory
      requestBody:
        description: Datos de la categoría a actualizar
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
      responses:
        '200':
          description: Categoría actualizada correctamente
        '400':
          description: Datos de entrada inválidos
        '404':
          description: Categoría no encontrada

    delete:
      tags:
        - categories
      summary: Eliminar una categoría
      description: Permite a un administrador eliminar una categoría.
      operationId: deleteCategory
      responses:
        '200':
          description: Categoría eliminada correctamente
        '404':
          description: Categoría no encontrada

  /api/users/register:
    post:
      tags:
        - users
      summary: Registrar un nuevo usuario
      description: Permite a un nuevo usuario registrarse en la tienda.
      operationId: registerUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: Usuario registrado exitosamente
        '400':
          description: Datos de entrada inválidos

  /api/users/login:
    post:
      tags:
        - users
      summary: Iniciar sesión
      description: Permite a un usuario iniciar sesión en la tienda.
      operationId: loginUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Sesión iniciada exitosamente
        '401':
          description: Credenciales inválidas

  /api/users/profile:
    get:
      tags:
        - users
      summary: Obtener perfil de usuario
      description: Permite obtener la información del perfil de usuario autenticado.
      operationId: getUserProfile
      responses:
        '200':
          description: Perfil de usuario obtenido exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
        '401':
          description: Usuario no autenticado

    put:
      tags:
        - users
      summary: Actualizar perfil de usuario
      description: Permite a un usuario actualizar su perfil.
      operationId: updateUserProfile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfile'
      responses:
        '200':
          description: Perfil de usuario actualizado exitosamente
        '400':
          description: Datos de entrada inválidos
          
  /api/users/addresses:
    get:
      tags:
        - users
      summary: Listar direcciones de envío
      description: Permite a un usuario autenticado obtener la lista de sus direcciones de envío.
      operationId: listUserAddresses
      responses:
        '200':
          description: Lista de direcciones obtenida exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address'
        '401':
          description: Usuario no autenticado

    post:
      tags:
        - users
      summary: Agregar dirección de envío
      description: Permite a un usuario agregar una nueva dirección de envío.
      operationId: addUserAddress
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Address'
      responses:
        '201':
          description: Dirección de envío agregada exitosamente
        '400':
          description: Datos de entrada inválidos
        '401':
          description: Usuario no autenticado

  /api/users/addresses/{addressId}:
    parameters:
      - name: addressId
        in: path
        description: ID de la dirección de envío
        required: true
        schema:
          type: string

    put:
      tags:
        - users
      summary: Actualizar dirección de envío
      description: Permite a un usuario actualizar una de sus direcciones de envío existentes.
      operationId: updateUserAddress
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Address'
      responses:
        '200':
          description: Dirección de envío actualizada exitosamente
        '400':
          description: Datos de entrada inválidos
        '401':
          description: Usuario no autenticado
        '404':
          description: Dirección no encontrada

    delete:
      tags:
        - users
      summary: Eliminar dirección de envío
      description: Permite a un usuario eliminar una de sus direcciones de envío existentes.
      operationId: deleteUserAddress
      responses:
        '200':
          description: Dirección de envío eliminada exitosamente
        '401':
          description: Usuario no autenticado
        '404':
          description: Dirección no encontrada


  # Endpoints de Carrito de Compras
  /api/cart:
    get:
      tags:
        - cart
      summary: Obtener carrito actual
      description: Devuelve los productos del carrito de compras actual.
      operationId: getCurrentCart
      responses:
        '200':
          description: Carrito obtenido exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
        '401':
          description: Usuario no autenticado

    delete:
      tags:
        - cart
      summary: Vaciar carrito
      description: Permite vaciar todos los productos del carrito actual.
      operationId: emptyCart
      responses:
        '200':
          description: Carrito vaciado exitosamente
        '401':
          description: Usuario no autenticado

  /api/cart/items:
    post:
      tags:
        - cart
      summary: Agregar producto al carrito
      description: Permite agregar un producto al carrito de compras.
      operationId: addItemToCart
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartItem'
      responses:
        '201':
          description: Producto agregado al carrito exitosamente
        '400':
          description: Datos de entrada inválidos

  /api/cart/items/{itemId}:
    parameters:
      - name: itemId
        in: path
        required: true
        schema:
          type: string
  
    put:
      tags:
        - cart
      summary: Actualizar cantidad de un producto en el carrito
      description: Permite actualizar la cantidad de un producto específico en el carrito.
      operationId: updateCartItem
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartItem'
      responses:
        '200':
          description: Cantidad del producto actualizada exitosamente
        '400':
          description: Datos de entrada inválidos
  
    delete:
      tags:
        - cart
      summary: Eliminar producto del carrito
      description: Permite eliminar un producto específico del carrito.
      operationId: deleteCartItem
      responses:
        '200':
          description: Producto eliminado del carrito exitosamente
        '404':
          description: Producto no encontrado en el carrito

  # Endpoints de Pedidos
  /api/orders:
    post:
      tags:
        - orders
      summary: Crear un nuevo pedido
      description: Permite a un usuario crear un nuevo pedido.
      operationId: createOrder
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '201':
          description: Pedido creado exitosamente
        '400':
          description: Datos de entrada inválidos

    get:
      tags:
        - orders
      summary: Listar pedidos del usuario
      description: Devuelve la lista de pedidos de un usuario autenticado.
      operationId: listUserOrders
      responses:
        '200':
          description: Lista de pedidos obtenida exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
        '401':
          description: Usuario no autenticado

  /api/orders/{orderId}:
    parameters:
      - name: orderId
        in: path
        description: ID del pedido
        required: true
        schema:
          type: string

    get:
      tags:
        - orders
      summary: Obtener detalles de un pedido
      description: Permite a un usuario obtener los detalles de un pedido específico.
      operationId: getOrderDetails
      responses:
        '200':
          description: Detalles del pedido obtenidos exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '401':
          description: Usuario no autenticado
        '404':
          description: Pedido no encontrado

  /api/orders/{orderId}/cancel:
    post:
      tags:
        - orders
      summary: Cancelar un pedido
      description: Permite a un usuario cancelar un pedido, si está permitido.
      operationId: cancelOrder
      parameters:
        - name: orderId
          in: path
          description: ID del pedido
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Pedido cancelado exitosamente
        '400':
          description: No se puede cancelar el pedido
        '401':
          description: Usuario no autenticado
        '404':
          description: Pedido no encontrado

  # Endpoints de Reseñas y Valoraciones
  /api/products/{productId}/reviews:
    get:
      tags:
        - reviews
      summary: Listar reseñas de un producto
      description: Devuelve la lista de reseñas de un producto específico.
      operationId: listProductReviews
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Lista de reseñas obtenida exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Review'
        '404':
          description: Producto no encontrado

    post:
      tags:
        - reviews
      summary: Agregar una reseña a un producto
      description: Permite a un usuario agregar una reseña para un producto específico.
      operationId: addProductReview
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Review'
      responses:
        '201':
          description: Reseña agregada exitosamente
        '400':
          description: Datos de entrada inválidos
        '404':
          description: Producto no encontrado

  /api/products/{productId}/reviews/{reviewId}:
    parameters:
      - name: productId
        in: path
        required: true
        schema:
          type: string
      - name: reviewId
        in: path
        required: true
        schema:
          type: string

    put:
      tags:
        - reviews
      summary: Actualizar una reseña
      description: Permite a un usuario actualizar una reseña existente de un producto.
      operationId: updateProductReview
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Review'
      responses:
        '200':
          description: Reseña actualizada exitosamente
        '400':
          description: Datos de entrada inválidos
        '404':
          description: Reseña no encontrada

    delete:
      tags:
        - reviews
      summary: Eliminar una reseña
      description: Permite a un usuario eliminar una reseña específica de un producto.
      operationId: deleteProductReview
      responses:
        '200':
          description: Reseña eliminada exitosamente
        '404':
          description: Reseña no encontrada


  # Endpoints de Búsqueda
  /api/search:
    get:
      tags:
        - search
      summary: Búsqueda general
      description: Realiza una búsqueda en productos y categorías.
      operationId: searchItems
      parameters:
        - name: q
          in: query
          required: true
          schema:
            type: string
        - name: type
          in: query
          schema:
            type: string
            enum: [products, categories]
      responses:
        '200':
          description: Resultados de la búsqueda obtenidos exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SearchResult'
                  

components:
  schemas:
  
    Product:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        category:
          type: string
        price:
          type: number
          format: float
        stock:
          type: integer
        description:
          type: string
        animalType:
          type: string

    Category:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
          
    User:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
          
    UserProfile:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        address:
          type: string
          
    Address:
      type: object
      properties:
        id:
          type: string
          description: ID único de la dirección
        street:
          type: string
          description: Calle de la dirección
        city:
          type: string
          description: Ciudad de la dirección
        state:
          type: string
          description: Estado o provincia de la dirección
        postalCode:
          type: string
          description: Código postal de la dirección
        country:
          type: string
          description: País de la dirección
          
    Cart:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/CartItem'
            
    CartItem:
      type: object
      properties:
        productId:
          type: string
        quantity:
          type: integer
          
    Order:
      type: object
      properties:
        orderId:
          type: string
          description: ID único del pedido
        items:
          type: array
          items:
            $ref: '#/components/schemas/CartItem'
        status:
          type: string
          description: Estado actual del pedido
        totalAmount:
          type: number
          format: float
          description: Monto total del pedido
        createdDate:
          type: string
          format: date-time
          description: Fecha de creación del pedido

          
    Review:
      type: object
      properties:
        reviewId:
          type: string
          description: ID único de la reseña
        rating:
          type: integer
          description: Calificación del producto
          minimum: 1
          maximum: 5
        comment:
          type: string
          description: Comentario del usuario sobre el producto
        userId:
          type: string
          description: ID del usuario que realizó la reseña
        createdDate:
          type: string
          format: date-time
          description: Fecha de creación de la reseña
          
    SearchResult:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
          
    Pet:
      type: object
      properties:
        id:
          type: string
          description: ID de la mascota
        name:
          type: string
          description: Nombre de la mascota
        type:
          type: string
          description: Tipo de mascota (por ejemplo, perro, gato)
        age:
          type: integer
          description: Edad de la mascota
        owner:
          type: string
          description: ID del propietario de la mascota
      required:
        - name
        - type      
          
          
